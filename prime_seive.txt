#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <unordered_map>


using namespace __gnu_pbds;
using namespace std;
#define ff              first
#define ss              second
#define ll             long long
#define pb              push_back
//#define mp              make_pair
#define pii             pair<int,int>
#define vi              vector<int>
#define mii             map<int,int>
#define pqb             priority_queue<int>
#define pqs             priority_queue<int,vi,greater<int> >
#define setbits(x)      __builtin_popcountll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define mod             1000000007
#define inf             1e18
#define ps(x,y)         fixed<<setprecision(y)<<x
#define mk(arr,n,type)  type *arr=new type[n];
#define w(x)            int x; cin>>x; while(x--)
#define orset 			tree < int ,  null_type ,  less ,  rb_tree_tag ,  tree_order_statistics_node_update >
//mt19937                 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
void mark_prime(ll int *prime)
{
	for(ll int i=3;i<100005;i+=2)
		prime[i]=1;
		
	for(ll int i=3;i<100005;i+=2)
		{
			if(prime[i]==1)
			{
				for(ll int j=i*i;j<100005;j+=i)
				prime[j]=0;
			}
		}
		
		prime[2]=1;
		prime[1]=prime[0]=0;
}

int main(int argc, char* rgv[])
{
	ll int prime[100005] = {0};
	ll csum[100005]={0};

	mark_prime(prime);

	for(int i=1;i<100005;i++)
	{	
	
			csum[i]=csum[i-1]+prime[i];
	
	}
	

	int q;
	cin>>q;
	while(q--)
	{
		int a,b;
		cin>>a>>b;
		cout<<csum[b]-csum[a-1]<<endl;
	}
	return 0;
}
